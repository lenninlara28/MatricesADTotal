/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Helper;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp 14
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        JButton botonesH[] = {cmdCrear, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoManual, cmdLlenadoAutomatico, cmdOperacion};

        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNumerodeFilas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumerodeColumnas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cmdCrear = new javax.swing.JButton();
        cmdLlenadoAutomatico = new javax.swing.JButton();
        cmdOperacion = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        cmdLlenadoManual = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTablaInicial = new javax.swing.JTable();
        cmbOperaciones = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTablaResultado = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Iniciales"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel2.setText("N° Filas :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        txtNumerodeFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumerodeFilasKeyTyped(evt);
            }
        });
        jPanel2.add(txtNumerodeFilas, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 30, -1));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setText("N°Columnas :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        txtNumerodeColumnas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumerodeColumnasKeyTyped(evt);
            }
        });
        jPanel2.add(txtNumerodeColumnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 30, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 360, 90));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel1.setText("Operaciones Matrices");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdCrear.setBackground(new java.awt.Color(0, 0, 0));
        cmdCrear.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmdCrear.setForeground(new java.awt.Color(255, 255, 255));
        cmdCrear.setText("Crear");
        cmdCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCrearActionPerformed(evt);
            }
        });
        jPanel3.add(cmdCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        cmdLlenadoAutomatico.setBackground(new java.awt.Color(0, 0, 0));
        cmdLlenadoAutomatico.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmdLlenadoAutomatico.setForeground(new java.awt.Color(255, 255, 255));
        cmdLlenadoAutomatico.setText("Automatico");
        cmdLlenadoAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoAutomaticoActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLlenadoAutomatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, -1));

        cmdOperacion.setBackground(new java.awt.Color(0, 0, 0));
        cmdOperacion.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmdOperacion.setForeground(new java.awt.Color(255, 255, 255));
        cmdOperacion.setText("Operacion");
        cmdOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOperacionActionPerformed(evt);
            }
        });
        jPanel3.add(cmdOperacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, -1));

        cmdLimpiar.setBackground(new java.awt.Color(0, 0, 0));
        cmdLimpiar.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmdLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        cmdLlenadoManual.setBackground(new java.awt.Color(0, 0, 0));
        cmdLlenadoManual.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmdLlenadoManual.setForeground(new java.awt.Color(255, 255, 255));
        cmdLlenadoManual.setText("Manual");
        cmdLlenadoManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoManualActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLlenadoManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 460, 90));

        tblTablaInicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblTablaInicial);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 340, 250));

        cmbOperaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cant. Num Pares", "Numeros Pares", "Letra C", "Diagonal Principal", "Letra H", "Diagonal Segundaria", "Triangular Superior", "Triangular Inferior", "Traspuesta", "Letra A", "Letra Z", "Letra T", "Letra V", "Letra E", "Letra F", "Letra P", "Letra I", "Letra N", "Letra Y", "Letra X", "Letra B", "Letra K", "Letra M", "Letra W", "Letra Q", "Letra J", "Letra G", "Letra R", "Figura 1", "Figura 2", "Figura Cruz", "Figura Rombo", "Recorrido Uno", "Recorrido Dos", "Recorrido Tres" }));
        jPanel1.add(cmbOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, -1, -1));

        tblTablaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblTablaResultado);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 340, 250));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane3.setViewportView(txtResultado);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 500, 80));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 550, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(956, 582));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCrearActionPerformed
        int nf, nc;
        DefaultTableModel tm, tm2;
        if (txtNumerodeFilas.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Digite El Numero De Filas ", 2);
            txtNumerodeFilas.requestFocusInWindow();
        } else if (txtNumerodeColumnas.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Digite El Numero De Columnas ", 2);
            txtNumerodeColumnas.requestFocusInWindow();
        } else {
            nf = Integer.parseInt(txtNumerodeFilas.getText());
            nc = Integer.parseInt(txtNumerodeColumnas.getText());
            if (nf == 0) {
                Helper.mensaje(this, "Numero De Filas No Puede Ser Cero", 3);
                txtNumerodeFilas.requestFocusInWindow();
            } else if (nc == 0) {
                Helper.mensaje(this, "Numero De Columnas No Puede Ser Cero", 3);
                txtNumerodeColumnas.requestFocusInWindow();
            } else if (nc > 13) {
                Helper.mensaje(this, "El Numero De Columnas No Puede Ser Mayor A 13", 2);
                txtNumerodeColumnas.requestFocusInWindow();
            } else {
                tm = (DefaultTableModel) tblTablaInicial.getModel();
                tm2 = (DefaultTableModel) tblTablaResultado.getModel();

                tm.setRowCount(nf);
                tm.setColumnCount(nc);

                tm2.setRowCount(nf);
                tm2.setColumnCount(nc);

                JButton botonesH[] = {cmdLlenadoManual, cmdLlenadoAutomatico, cmdLimpiar};
                JButton botonesD[] = {cmdCrear, cmdOperacion};

                Helper.habilitarBotones(botonesH);
                Helper.deshabilitarBotones(botonesD);
            }
        }
    }//GEN-LAST:event_cmdCrearActionPerformed

    private void cmdLlenadoAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoAutomaticoActionPerformed
        int nf, nc, n;

        nc = tblTablaInicial.getColumnCount();
        nf = tblTablaInicial.getRowCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                n = (int) (Math.random() * 50 + 1);
                tblTablaInicial.setValueAt(n, i, j);
            }

        }

        JButton botonesH[] = {cmdOperacion, cmdLimpiar};
        JButton botonesD[] = {cmdCrear, cmdLlenadoManual, cmdLlenadoAutomatico};

        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
    }//GEN-LAST:event_cmdLlenadoAutomaticoActionPerformed

    private void cmdOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOperacionActionPerformed
        int op, cantPares;
        op = cmbOperaciones.getSelectedIndex();
        int nf, res, nc;
        nf = Integer.parseInt(txtNumerodeFilas.getText());
        nc = Integer.parseInt(txtNumerodeColumnas.getText());
        Helper.limpiadoTabla(tblTablaResultado);
        if (nf < 5 || nf > 13) {
            Helper.mensaje(this, "Para Que Todas Las Operaciones Se Den \n"
                    + "El Numero De Filas Y Columnas Debe Ser Igual O Mayor a 5 Y Menor O Igual A 13", 2);
        } else {
            switch (op) {
                case 0:
                    cantPares = Helper.cantidadPares(tblTablaInicial);
                    txtResultado.setText("El número de elementos pares es: " + cantPares);
                    break;
                case 1:
                    Helper.pares(tblTablaInicial, tblTablaResultado);
                    break;
                case 2:
                    Helper.letraC(tblTablaInicial, tblTablaResultado);
                    break;
                case 3:
                    Helper.diagonalPrincipal(tblTablaInicial, tblTablaResultado);
                    break;
                case 4:
                    Helper.letraH(tblTablaInicial, tblTablaResultado);
                    break;
                case 5:
                    Helper.diagonalSecundaria(tblTablaInicial, tblTablaResultado);
                    break;
                case 6:
                    Helper.triangularSuperior(tblTablaInicial, tblTablaResultado);
                    break;
                case 7:
                    Helper.triangularInferior(tblTablaInicial, tblTablaResultado);
                    break;
                case 8:
                    Helper.transpuesta(tblTablaInicial, tblTablaResultado);
                    break;
                case 9:
                    Helper.letraA(tblTablaInicial, tblTablaResultado);
                    break;
                case 10:
                    Helper.letraZ(tblTablaInicial, tblTablaResultado);
                    break;
                case 11:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''T'' El Numero De Columnas Debe Ser Impar", 1);
                        res = JOptionPane.showConfirmDialog(this, "¿Desea Ver La Letra ''T'' De Todas Formas?", "Preferencia", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            Helper.letraT(tblTablaInicial, tblTablaResultado);
                        } else {
                        }
                    } else {
                        Helper.letraT(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 12:
                    Helper.letraV(tblTablaInicial, tblTablaResultado);
                    break;
                case 13:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''E'' El Numero De Columnas Debe Ser Impar", 1);
                        res = JOptionPane.showConfirmDialog(this, "¿Desea Ver La Letra ''E'' De Todas Formas?", "Preferencia", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            Helper.letraE(tblTablaInicial, tblTablaResultado);
                        } else {
                        }
                    } else {
                        Helper.letraE(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 14:
                    Helper.letraF(tblTablaInicial, tblTablaResultado);
                    break;
                case 15:
                    Helper.letraP(tblTablaInicial, tblTablaResultado);
                    break;
                case 16:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''I'' El Numero De Columnas Debe Ser Impar", 1);
                        res = JOptionPane.showConfirmDialog(this, "¿Desea Ver La Letra ''I'' De Todas Formas?", "Preferencia", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            Helper.letraI(tblTablaInicial, tblTablaResultado);
                        } else {
                        }
                    } else {
                        Helper.letraI(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 17:
                    Helper.letraN(tblTablaInicial, tblTablaResultado);
                    break;
                case 18:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''Y'' El Numero De Columnas Debe Ser Impar", 1);
                        res = JOptionPane.showConfirmDialog(this, "¿Desea Ver La Letra ''Y'' De Todas Formas?", "Preferencia", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            Helper.letraY(tblTablaInicial, tblTablaResultado);
                        } else {
                        }
                    } else {
                        Helper.letraY(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 19:
                    Helper.letraX(tblTablaInicial, tblTablaResultado);
                    break;
                case 20:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''B'' El Numero De Filas Debe Ser Impar ", 1);
                    } else {
                        Helper.letraB(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 21:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''K'' El Numero De Filas Debe Ser Impar ", 1);
                    } else {
                        Helper.letraK(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 22:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''M'' El N°Filas y N°Columnas Debe Ser Impar ", 1);
                    } else if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''M'' El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else {
                        Helper.letraM(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 23:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''W'' El N°Filas y N°Columnas Debe Ser Impar ", 1);
                    } else if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''W'' El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else {
                        Helper.letraW(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 24:
                    if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''Q'' El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else {
                        Helper.letraQ(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 25:
                    Helper.letraJ(tblTablaInicial, tblTablaResultado);
                    break;
                case 26:
                    if (nf < 6) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''G'' El N°Filas Debe Ser Mayor a 6  ", 1);
                    }
                    Helper.letraG(tblTablaInicial, tblTablaResultado);
                    break;
                case 27:
                    if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Letra ''R'' El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else {
                        Helper.letraR(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 28:
                    if (nf % 2 != 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura 1 El N°Filas Debe Ser Par y N°Columnas Debe Ser El Antecesor A Ese Numero ", 1);
                    } else if (nc != nf - 1) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura 1 El N°Columnas Debe Ser El Antecesor A El N°Filas ", 1);
                    } else {
                        Helper.figura1(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 29:
                    if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura 2 El N°Filas Debe Ser Impar y N°Columnas Debe Ser El Sucesor A Ese Numero ", 1);
                    } else if (nc != nf + 1) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura 2 El N°Columnas Debe Ser El Sucesor A El N°Filas ", 1);
                    } else {
                        Helper.figura2(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 30:
                    if (nf % 2 != 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura Cruz El N°Filas y N°Columnas Deben Ser Pares ", 1);
                    } else if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura De Cruz El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else {
                        Helper.figuraCruz(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 31:
                    if (nf != nc) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura Rombo El N°Filas y N°Columnas Debe Ser Igual ", 1);
                    } else if (nf % 2 == 0) {
                        Helper.mensaje(this, "Para Ver Mejor La Figura Rombo El N°Filas Debe Ser Impar ", 1);
                    } else {
                        Helper.figuraRombo(tblTablaInicial, tblTablaResultado);
                    }
                    break;
                case 32:
                    txtResultado.setText(Helper.recorridoUno(tblTablaInicial));
                    break;
                case 33:
                    txtResultado.setText(Helper.recorridoDos(tblTablaInicial));
                    break;
                case 34:
                    txtResultado.setText(Helper.recorrido3(tblTablaInicial));
                    break;
            }
        }
    }//GEN-LAST:event_cmdOperacionActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed
        txtNumerodeFilas.setText("");
        txtNumerodeColumnas.setText("");
        txtNumerodeFilas.requestFocusInWindow();
        cmbOperaciones.setSelectedIndex(0);
        txtResultado.setText("");

        Helper.porDefectoTabla(tblTablaInicial);
        Helper.porDefectoTabla(tblTablaResultado);

        JButton botonesH[] = {cmdCrear, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoManual, cmdLlenadoAutomatico, cmdOperacion};

        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);


    }//GEN-LAST:event_cmdLimpiarActionPerformed

    private void cmdLlenadoManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoManualActionPerformed
        int nf, nc, n;
        boolean aux = true;
        int sw, res;
        nf = tblTablaInicial.getRowCount();
        nc = tblTablaInicial.getColumnCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                do {
                    sw = 1;
                    try {
                        n = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite el elemento en la posicion[" + i + "] " + " [" + j + "]").trim());
                        tblTablaInicial.setValueAt(n, i, j);
                    } catch (NumberFormatException e) {
                        Helper.mensaje(this, "Digite un numero valido", 2);
                        sw = 0;
                    } catch (NullPointerException e) {
                        res = JOptionPane.showConfirmDialog(this, "¿seguro que deseas salir?", "Salir", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            sw = 1;
                            i = nf;
                            j = nc;
                            aux = false;
                            JButton botonesH[] = {cmdCrear, cmdLimpiar};
                            Helper.habilitarBotones(botonesH);
                        } else {
                            sw = 0;
                        }
                    }
                } while (sw == 0);
            }
        }
        cmdOperacion.setEnabled(aux);
        JButton botonesD[] = {cmdLlenadoManual, cmdLlenadoAutomatico};
        Helper.deshabilitarBotones(botonesD);
    }//GEN-LAST:event_cmdLlenadoManualActionPerformed

    private void txtNumerodeFilasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumerodeFilasKeyTyped
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumerodeFilasKeyTyped

    private void txtNumerodeColumnasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumerodeColumnasKeyTyped
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumerodeColumnasKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbOperaciones;
    private javax.swing.JButton cmdCrear;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenadoAutomatico;
    private javax.swing.JButton cmdLlenadoManual;
    private javax.swing.JButton cmdOperacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblTablaInicial;
    private javax.swing.JTable tblTablaResultado;
    private javax.swing.JTextField txtNumerodeColumnas;
    private javax.swing.JTextField txtNumerodeFilas;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
